{"version":3,"sources":["providers/errors.js","providers/client.js","providers/users/index.js","providers/products/index.js","providers/orders/index.js","providers/index.js","providers/auth/index.js","components/users/list/index.js","components/users/create/index.js","components/users/edit/index.js","components/products/list/index.js","components/products/create/index.js","components/products/edit/index.js","components/orders/list/index.js","components/orders/show/index.js","App.js","index.js"],"names":["Error","InternalError","WrongParams","DatabaseError","UsernameOccupied","EntityNotFound","WrongCredentials","NotAuth","SessionNotFound","errorText","errCode","error","Object","entries","find","client","axios","create","baseURL","timeout","withCredentials","interceptors","response","use","data","status","success","_get","get","url","params","queryParams","keys","map","key","toString","join","blob","blobUrl","a","responseType","console","dataProvider","getList","filter","pagination","sort","pageIndex","page","pageSize","perPage","Promise","resolve","items","total","reject","message","getOne","id","item","getMany","warn","getManyReference","email","fullname","password","username","post","delete","previousData","deleteMany","update","put","uploading","image","rest","file","src","formData","FormData","forEach","append","img","positions","all","position","positionFetchResults","some","res","amount","p","cancel","complete","provider","resource","users","products","orders","updateMany","authProvider","login","checkError","log","checkAuth","logout","getIdentity","fullName","getPermissions","props","List","Datagrid","TextField","source","EmailField","BooleanField","DateField","showTime","EditButton","DeleteButton","Create","title","SimpleForm","TextInput","label","PasswordInput","Edit","disabled","BooleanInput","NumberInput","step","ImageInput","accept","ImageField","multiline","FunctionField","render","record","alt","filename","ChipField","ShowButton","ShowActions","basePath","notify","useNotify","redirect","useRedirect","useDataProvider","onCompleteClick","React","then","catch","onCancelClick","TopToolbar","Button","onClick","Show","actions","SimpleShowLayout","options","weekday","year","month","day","hour","minute","paymentType","NumberField","style","currency","ArrayField","fieldKey","App","Admin","Resource","name","list","UserList","UserCreate","edit","UserEdit","ProductList","ProductCreate","ProductEdit","OrderList","show","OrderShow","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08997d62.chunk.js","sourcesContent":["export const Error = {\r\n  InternalError: 1,\r\n  WrongParams: 2,\r\n  DatabaseError: 3,\r\n  UsernameOccupied: 4,\r\n  EntityNotFound: 5,\r\n  WrongCredentials: 6,\r\n  NotAuth: 7,\r\n  SessionNotFound: 8,\r\n};\r\n\r\n\r\nexport const errorText = errCode => {\r\n  const error = Object.entries(Error).find(([key, value]) => value == errCode);\r\n  return `Error: ${error ? error[0] : \"Unknown\"}`\r\n}","import axios from \"axios\"\r\nimport { Error } from \"./errors\"\r\n\r\nconst baseURL = process.env.NODE_ENV == \"production\" ? \"/api\" : \"http://localhost:3000/api\";\r\n\r\nconst client = axios.create({ \r\n  baseURL: baseURL,\r\n  timeout: 30000,\r\n  withCredentials: true\r\n});\r\n\r\nclient.interceptors.response.use(\r\n  (response) => response.data,\r\n  (error) => {\r\n    if (!error.response) {\r\n      return {\r\n        status: 500,\r\n        success: false,\r\n        error: Error.InternalError\r\n      }\r\n    }\r\n    else {\r\n      return {\r\n        status: error.response.status,\r\n        ...error.response.data,\r\n      };\r\n    }\r\n\r\n  }\r\n);\r\n\r\n\r\nconst _get = client.get;\r\nclient.get = function(url, params = {}) {\r\n  const queryParams = Object.keys(params).map(key => `${key}=${params[key].toString()}`).join(\"&\");\r\n  return _get(`${url}?${queryParams}`);\r\n}\r\n\r\nclient.blob = async function(blobUrl) {\r\n  try {\r\n    const response = await axios.get(blobUrl, { responseType: 'blob' });\r\n    return response.data;\r\n  }\r\n  catch (err) {\r\n    console.error(\"Failed to parse a BLOB file\");\r\n    return null;\r\n  }  \r\n}\r\n\r\n\r\nexport default client;","import client from \"../client\"\r\nimport { errorText } from \"../errors\"\r\n\r\nconst dataProvider = {\r\n\r\n  getList: async (params) => {\r\n    const { filter, pagination, sort }  = params;\r\n\r\n    const response = await client.get(\"/users\", { pageIndex: pagination.page, pageSize: pagination.perPage })\r\n      \r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.items || [],\r\n        total: response.data.total || 0\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  getOne: async (params) => {\r\n    const { id } = params;\r\n\r\n    const response = await client.get(`/users/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.item,\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  getMany: (params) => {\r\n    console.warn(\"Method getMany not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: GetMany method is not implemented\"\r\n    })\r\n  },\r\n\r\n  getManyReference: (params) => {\r\n    console.warn(\"Method getManyReference not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: GetManyReference method is not implemented\"\r\n    })\r\n  },\r\n\r\n  create: async (params) => {\r\n    const {\r\n      email,\r\n      fullname,\r\n      password,\r\n      username,\r\n    } = params.data;\r\n\r\n    const response = await client.post(\"/users\", {\r\n      email: email,\r\n      fullname: fullname,\r\n      password: password,\r\n      username: username\r\n    });\r\n\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: {\r\n          id: response.data.id,\r\n          email: email,\r\n          fullname: fullname,\r\n          username: username,\r\n        },\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  delete: async (params) => {\r\n    const { id, previousData } = params;\r\n\r\n    const response = await client.delete(`/users/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: {\r\n          ...previousData,\r\n          id: response.data.id\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  deleteMany: (params) => {\r\n    console.warn(\"Method deleteMany not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: DeleteMany method is not implemented\"\r\n    })\r\n  },\r\n\r\n  update: async (params) => {\r\n    const { id, data, previousData } = params;\r\n\r\n    const response = await client.put(`/users/${id}`, { ...data });\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.item\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      }) \r\n    }\r\n  }\r\n};\r\n\r\nexport default dataProvider","import client from \"../client\"\r\nimport { errorText } from \"../errors\"\r\n\r\nconst dataProvider = {\r\n  getList: async (params) => {\r\n    const { filter, pagination, sort }  = params;\r\n\r\n    const response = await client.get(\"/products\", { pageIndex: pagination.page, pageSize: pagination.perPage })\r\n      \r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.items || [],\r\n        total: response.data.total || 0\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  getOne: async (params) => {\r\n    const { id } = params;\r\n\r\n    const response = await client.get(`/products/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.item,\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n\r\n  getMany: (params) => {\r\n    console.warn(\"Method getMany not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: GetMany method is not implemented\"\r\n    })\r\n  },\r\n\r\n  getManyReference: (params) => {\r\n    console.warn(\"Method getManyReference not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: GetManyReference method is not implemented\"\r\n    })\r\n  },\r\n\r\n\r\n  create: async function(params) {\r\n    const {\r\n      image: uploading, ...rest\r\n    } = params.data;\r\n\r\n    let file = null;\r\n    if (uploading) {\r\n      try {\r\n        file = await client.blob(uploading.src);\r\n      }\r\n      catch {\r\n        return Promise.reject({\r\n          message: \"Error: Failed to upload image file\"\r\n        });\r\n      }\r\n    }\r\n\r\n    const formData = new FormData();\r\n    Object.keys(rest).forEach(key => {\r\n      formData.append(key, rest[key]);\r\n    });\r\n\r\n    if (file) {\r\n      formData.append(\"uploadingImage\", file);\r\n    }\r\n\r\n    const response = await client.post(\"/products\", formData);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.item\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  delete: async (params) => {\r\n    const { id, previousData } = params;\r\n\r\n    const response = await client.delete(`/products/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: {\r\n          ...previousData,\r\n          id: response.data.id\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  deleteMany: (params) => {\r\n    console.warn(\"Method deleteMany not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: DeleteMany method is not implemented\"\r\n    })\r\n  },\r\n\r\n  update: async (params) => {\r\n    const { id, data } = params;\r\n\r\n    const {\r\n      image: uploading, \r\n      img, \r\n      ...rest\r\n    } = data;\r\n\r\n    let file = null;\r\n    if (uploading) {\r\n      try {\r\n        file = await client.blob(uploading.src);\r\n      }\r\n      catch {\r\n        return Promise.reject({\r\n          message: \"Error: Failed to upload image file\"\r\n        });\r\n      }\r\n    }\r\n\r\n    const formData = new FormData();\r\n    Object.keys(rest).forEach(key => {\r\n      formData.append(key, rest[key]);\r\n    });\r\n\r\n    if (file !== null) {\r\n      formData.append(\"uploadingImage\", file);\r\n    }\r\n\r\n    const response = await client.put(`/products/${id}`, formData);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.item\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      }) \r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default dataProvider;","import client from \"../client\"\r\nimport { errorText } from \"../errors\"\r\n\r\nconst dataProvider = {\r\n\r\n  getList: async (params) => {\r\n    const { filter, pagination, sort }  = params;\r\n\r\n    const response = await client.get(\"/orders\", { pageIndex: pagination.page, pageSize: pagination.perPage })\r\n      \r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.items || [],\r\n        total: response.data.total || 0\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  getOne: async (params) => {\r\n    const { id } = params;\r\n\r\n    const response = await client.get(`/orders/${id}`);\r\n\r\n    if (!response.success) {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n\r\n    const { positions } = response.data.item;\r\n\r\n    const positionFetchResults = await Promise.all((positions || []).map(position => {\r\n      return client.get(`/products/${position.id}`);\r\n    }));\r\n\r\n    if (positionFetchResults.some(res => !res.success)) {\r\n      return Promise.resolve({\r\n        data: response.data.item,\r\n      }); \r\n    }\r\n    else {\r\n      return Promise.resolve({\r\n        data: {\r\n          ...response.data.item,\r\n          positions: positionFetchResults.map(response => ({\r\n            ...response.data.item,\r\n            amount: positions.find(p => p.id == response.data.item.id).amount\r\n          }))\r\n        },\r\n      })\r\n    }\r\n  },\r\n\r\n  getMany: (params) => {\r\n    console.warn(\"Method getMany not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: GetMany method is not implemented\"\r\n    })\r\n  },\r\n\r\n  getManyReference: (params) => {\r\n    console.warn(\"Method getManyReference not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: GetManyReference method is not implemented\"\r\n    })\r\n  },\r\n\r\n  create: async (params) => {\r\n    console.warn(\"Method create not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: Create method is not implemented\"\r\n    })\r\n  },\r\n\r\n  delete: async (params) => {\r\n    const { id, previousData } = params;\r\n\r\n    const response = await client.delete(`/orders/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: {\r\n          ...previousData,\r\n          id: response.data.id\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  deleteMany: (params) => {\r\n    console.warn(\"Method deleteMany not implemented\");\r\n    return Promise.reject({\r\n      status: 400,\r\n      message: \"Error: DeleteMany method is not implemented\"\r\n    })\r\n  },\r\n\r\n  update: async (params) => {\r\n    const { id, data, previousData } = params;\r\n\r\n    const response = await client.put(`/orders/${id}`, { ...data });\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: response.data.item\r\n      });\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      }) \r\n    }\r\n  },\r\n\r\n  cancel: async (params) => {\r\n    const { id } = params;\r\n    const response = await client.post(`/orders/cancel/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: { id }\r\n      });\r\n    }\r\n    else {\r\n      Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  complete: async (params) => {\r\n    const { id } = params;\r\n    \r\n    const response = await client.post(`/orders/complete/${id}`);\r\n\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        data: { id }\r\n      });\r\n    }\r\n    else {\r\n      Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n};\r\n\r\nexport default dataProvider","import users from './users'\r\nimport products from './products'\r\nimport orders from './orders'\r\n\r\n\r\nconst provider = {\r\n  getList: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.getList(params);\r\n      case \"products\":\r\n        return products.getList(params);\r\n      case \"orders\":\r\n        return orders.getList(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n  getOne: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.getOne(params);\r\n      case \"products\":\r\n        return products.getOne(params);\r\n      case \"orders\":\r\n        return orders.getOne(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n  getMany: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.getMany(params);\r\n      case \"products\":\r\n        return products.getMany(params);\r\n      case \"orders\":\r\n        return orders.getMany(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n\r\n  getManyReference: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.getManyReference(params);\r\n      case \"products\":\r\n        return products.getManyReference(params);\r\n      case \"orders\":\r\n        return orders.getManyReference(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n  create: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.create(params);\r\n      case \"products\":\r\n        return products.create(params);\r\n      case \"orders\":\r\n        return orders.create(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n  \r\n  update: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.update(params);\r\n      case \"products\":\r\n        return products.update(params);\r\n      case \"orders\":\r\n        return orders.update(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n  updateMany: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.updateMany(params);\r\n      case \"products\":\r\n        return products.updateMany(params);\r\n      case \"orders\":\r\n        return orders.updateMany(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n  \r\n  delete: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.delete(params);\r\n      case \"products\":\r\n        return products.delete(params);\r\n      case \"orders\":\r\n        return orders.delete(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n  deleteMany: (resource, params) => {\r\n    switch(resource) {\r\n      case \"users\":\r\n        return users.deleteMany(params);\r\n      case \"products\":\r\n        return products.deleteMany(params);\r\n      case \"orders\":\r\n        return orders.deleteMany(params);\r\n      default:\r\n        return Promise.reject();\r\n    }\r\n  },\r\n\r\n  cancel: (resource, params) => {\r\n    if (resource == \"orders\") {\r\n      return orders.cancel(params);\r\n    }\r\n\r\n    return Promise.reject();\r\n  },\r\n\r\n  complete: (resource, params) => {\r\n    if (resource == \"orders\") {\r\n      return orders.complete(params);\r\n    }\r\n\r\n    return Promise.reject();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default provider","import client from \"../client\";\r\nimport { errorText } from \"../errors\";\r\n\r\nconst authProvider = {\r\n  login: async (params) => {\r\n    const { username, password } = params;\r\n\r\n    const response = await client.post(\"/auth/login\", {\r\n      username, \r\n      password\r\n    });\r\n\r\n    if (response.success) {\r\n      return Promise.resolve();\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n  checkError: error => {\r\n    console.log(\"check error\", error);\r\n    if (error.status == 401 || error.status == 403) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    return Promise.resolve();\r\n  },\r\n\r\n\r\n  checkAuth: async (params) => {\r\n    const response = await client.post(\"/auth\");\r\n    if (response.success) {\r\n      return Promise.resolve();\r\n    }\r\n    else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: errorText(response.error)\r\n      });\r\n    }\r\n  },\r\n\r\n  logout: async () => {\r\n    await client.post(\"/auth/logout\");\r\n    return Promise.resolve();\r\n  },\r\n\r\n  getIdentity: async () => {\r\n    const response = await client.get(\"/auth/user\");\r\n    if (response.success) {\r\n      return Promise.resolve({\r\n        id: response.data.id,\r\n        fullName: response.data.fullname || response.data.username\r\n      });\r\n    }\r\n    else {\r\n      return Promise.resolve();\r\n    }\r\n  },\r\n\r\n  getPermissions: params => Promise.resolve(),\r\n}\r\n\r\nexport default authProvider","import React from \"react\";\r\nimport { List, Datagrid, TextField, BooleanField, DateField, EmailField, EditButton, DeleteButton } from \"react-admin\";\r\n\r\nexport default props => {\r\n\r\n  return (\r\n    <List {...props}>\r\n      <Datagrid>\r\n        <TextField source=\"id\" />\r\n        <TextField source=\"username\" />\r\n        <EmailField source=\"email\" />\r\n        <BooleanField source=\"active\" />\r\n        <DateField showTime={true} source=\"lastLogin\" />\r\n\r\n        <EditButton />\r\n        <DeleteButton />\r\n\r\n      </Datagrid>\r\n    </List>\r\n  )\r\n}","import React from \"react\"\r\nimport { Create, SimpleForm, TextInput, PasswordInput } from 'react-admin'\r\n\r\nexport default props => {\r\n  return (\r\n    <Create {...props} title=\"Create new user\">\r\n      <SimpleForm>\r\n        <TextInput label=\"Username\" source=\"username\" />\r\n        <PasswordInput label=\"Password\" source=\"password\" />\r\n        <TextInput label=\"Fullname\" source=\"fullname\" />\r\n        <TextInput label=\"Email\" source=\"email\" />\r\n      </SimpleForm>\r\n    </Create>\r\n  )\r\n}","import React from \"react\"\r\nimport { Edit, SimpleForm, TextInput, PasswordInput, BooleanInput } from 'react-admin'\r\n\r\nexport default props => {\r\n  return (\r\n    <Edit {...props} title=\"Edit user\">\r\n      <SimpleForm>\r\n        <TextInput label=\"Username\" source=\"username\" disabled />\r\n        <PasswordInput label=\"Password\" source=\"password\" />\r\n        <TextInput label=\"Fullname\" source=\"fullname\" />\r\n        <TextInput label=\"Email\" source=\"email\" />\r\n        <BooleanInput label=\"Active\" source=\"active\" />\r\n      </SimpleForm>\r\n    </Edit>\r\n  )\r\n}","import React from \"react\";\r\nimport { List, Datagrid, TextField, EditButton, DeleteButton } from \"react-admin\";\r\n\r\nexport default props => {\r\n\r\n  return (\r\n    <List {...props}>\r\n      <Datagrid>\r\n        <TextField source=\"id\" />\r\n        <TextField source=\"nameitem\" />\r\n        <TextField source=\"brand\" />\r\n        <TextField source=\"quality\" />\r\n        <TextField source=\"count\" />\r\n        <EditButton />\r\n        <DeleteButton />\r\n      </Datagrid>\r\n    </List>\r\n  )\r\n}","import React from \"react\"\r\nimport { Create, SimpleForm, TextInput, NumberInput, ImageInput, ImageField } from 'react-admin'\r\nimport RichTextInput from 'ra-input-rich-text';\r\n\r\n\r\nexport default props => {\r\n  return (\r\n    <Create {...props} title=\"Add new product\">\r\n      <SimpleForm>\r\n        <TextInput label=\"Name\" source=\"nameitem\" />\r\n        <TextInput label=\"Brand\" source=\"brand\" />\r\n        <TextInput label=\"Quality\" source=\"quality\" />\r\n        <TextInput label=\"Typeitem\" source=\"typeitem\" />\r\n        <TextInput label=\"Type\" source=\"type\" />\r\n\r\n        <NumberInput label=\"Price\" source=\"price\" step={1} />\r\n        <NumberInput label=\"Price Opt\" source=\"priceopt\" step={1} />\r\n\r\n        <NumberInput label=\"Stock count\" source=\"count\" step={1} />\r\n\r\n        <ImageInput accept=\"image/*\" label=\"Image\" source=\"image\">\r\n          <ImageField source=\"src\" title=\"title\" />\r\n        </ImageInput>\r\n\r\n        <TextInput label=\"Description Header\" source=\"descriptionHeader\" />\r\n        <RichTextInput label=\"Description\" source=\"description\" multiline />\r\n\r\n        <TextInput label=\"meta: idmodallink\" source=\"idmodallink\" />\r\n        <TextInput label=\"meta: idmodal\" source=\"idmodal\" />\r\n        <TextInput label=\"meta: altimg\" source=\"altimg\" />\r\n      </SimpleForm>\r\n    </Create>\r\n  )\r\n}","import React from \"react\"\r\nimport { Edit, SimpleForm, TextInput, NumberInput, ImageField, ImageInput, FunctionField } from 'react-admin'\r\nimport RichTextInput from 'ra-input-rich-text';\r\n\r\n\r\nconst getImageUrl = (filename) => {\r\n  return `${process.env.NODE_ENV == \"production\" ? \"/product-images\" : \"http://localhost:3000/product-images\"}/${filename}`;\r\n}\r\n\r\nexport default props => {\r\n  return (\r\n    <Edit {...props} title=\"Edit product\">\r\n      <SimpleForm>\r\n        <TextInput label=\"Name\" source=\"nameitem\" />\r\n        <TextInput label=\"Brand\" source=\"brand\" />\r\n        <TextInput label=\"Quality\" source=\"quality\" />\r\n        <TextInput label=\"Typeitem\" source=\"typeitem\" />\r\n        <TextInput label=\"Type\" source=\"type\" />\r\n\r\n        <NumberInput label=\"Price\" source=\"price\" step={1} />\r\n        <NumberInput label=\"Price Opt\" source=\"priceopt\" step={1} />\r\n\r\n        <NumberInput label=\"Stock count\" source=\"count\" step={1} />\r\n\r\n        <FunctionField \r\n          label=\"Current product image\"\r\n          render={record => {\r\n            return (\r\n              <div>\r\n                <img alt=\"Product preview\" src={getImageUrl(record.img)} />\r\n              </div>\r\n            )\r\n          }}\r\n        /> \r\n\r\n        <ImageInput accept=\"image/*\" label=\"Change image\" source=\"image\">\r\n          <ImageField source=\"src\" />  \r\n        </ImageInput>\r\n\r\n        <TextInput label=\"Description Header\" source=\"descriptionHeader\" />\r\n        <RichTextInput label=\"Description\" source=\"description\" multiline />\r\n\r\n        <TextInput label=\"meta: idmodallink\" source=\"idmodallink\" />\r\n        <TextInput label=\"meta: idmodal\" source=\"idmodal\" />\r\n        <TextInput label=\"meta: altimg\" source=\"altimg\" />\r\n      </SimpleForm>\r\n    </Edit>\r\n  )\r\n}","import React from \"react\";\r\nimport { List, ShowButton, DeleteButton, Datagrid, BooleanField, TextField, DateField, ChipField } from \"react-admin\";\r\n\r\nexport default props => {\r\n\r\n  return (\r\n    <List {...props}>\r\n      <Datagrid>\r\n        <TextField source=\"id\" />\r\n        <DateField showTime={true} source=\"date\" />\r\n        <TextField source=\"customerName\" />\r\n        <TextField source=\"customerPhone\" />\r\n        <TextField source=\"total\" />\r\n        <BooleanField source=\"discount\" />\r\n        <ChipField source=\"status\" />\r\n\r\n        <ShowButton label=\"Details\" />\r\n        <DeleteButton label=\"Delete\" />\r\n      </Datagrid>\r\n    </List>\r\n  )\r\n}","import * as React from \"react\";\r\nimport { Show, SimpleShowLayout, FunctionField , ChipField, ArrayField, Datagrid, TextField, DateField, NumberField, BooleanField } from 'react-admin';\r\nimport { TopToolbar } from 'react-admin';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDataProvider, useRedirect, useNotify } from \"react-admin\"\r\n\r\n\r\nconst ShowActions = ({ basePath, data, resource }) => {\r\n  const notify = useNotify();\r\n  const redirect = useRedirect();\r\n  const dataProvider = useDataProvider();\r\n\r\n  const onCompleteClick = React.useCallback(() => {\r\n    dataProvider.complete(resource, { \r\n      id: data.id \r\n    }).then(({ data }) => {\r\n      redirect(basePath);\r\n      notify(`Order #${data.id} has been completed!`, \"info\");\r\n    })\r\n    .catch(error => {\r\n      notify(error.message, \"error\");\r\n    });\r\n  }, [ notify, redirect, resource, data, basePath, dataProvider ]);\r\n\r\n  const onCancelClick = React.useCallback(() => {\r\n    dataProvider.cancel(resource, { \r\n      id: data.id \r\n    }).then(({ data }) => {\r\n      redirect(basePath);\r\n      notify(`Order #${data.id} has been cancelled!`, \"info\");\r\n    })\r\n    .catch(error => {\r\n      notify(error.message, \"error\");\r\n    });\r\n  }, [ notify, resource, redirect, data, basePath, dataProvider ]);\r\n\r\n  if (data && (data.status == \"Cancelled\" || data.status == \"Completed\")) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TopToolbar>\r\n      <Button onClick={onCancelClick}>Mark as Cancelled</Button>\r\n      <Button onClick={onCompleteClick}>Mark as Completed</Button>\r\n    </TopToolbar>\r\n  )\r\n}\r\n\r\n\r\nexport default (props) => (\r\n    <Show actions={<ShowActions />}  {...props}>\r\n        <SimpleShowLayout>\r\n            <h2>Order info</h2>\r\n            <TextField label=\"Order ID\" source=\"id\" />\r\n            <DateField label=\"Date\" source=\"date\" showTime={true} options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: \"numeric\", minute: \"numeric\" }} />\r\n            <FunctionField \r\n              label=\"Payment Type\"\r\n              render={record => {\r\n                switch (record.paymentType) {\r\n                  case 0:\r\n                    return \"By card (Payture)\";\r\n                  default:\r\n                    return \"By money transfer\";\r\n                }\r\n              }}\r\n            />\r\n            <ChipField label=\"Order Status\" source=\"status\" />\r\n            <NumberField label=\"Total\" source=\"total\" options={{ style: 'currency', currency: 'RUB' }}  />\r\n            <BooleanField label=\"With discount\" source=\"discount\" />\r\n\r\n            <h2>Customer contacts</h2>\r\n            <TextField label=\"Name\" source=\"customerName\" />\r\n            <TextField label=\"Phone\" source=\"customerPhone\" />\r\n\r\n            <h2>Positions</h2>\r\n            <ArrayField source=\"positions\" fieldKey=\"id\">\r\n              <Datagrid>\r\n                <TextField label=\"Product ID\" source=\"id\" />\r\n                <TextField label=\"Product name\" source=\"nameitem\" />\r\n                <NumberField label=\"Price\" source=\"price\" options={{ style: 'currency', currency: 'RUB' }}  />\r\n                <NumberField label=\"Discount Price\" source=\"priceopt\" options={{ style: 'currency', currency: 'RUB' }}  />\r\n                <NumberField label=\"Amount\" source=\"amount\" />\r\n              </Datagrid>\r\n            </ArrayField> \r\n\r\n\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from \"react\"\n\nimport { Admin, Resource } from 'react-admin'\nimport dataProvider from './providers'\nimport authProvider from './providers/auth'\n\nimport { UserList, UserCreate, UserEdit } from './components/users';\nimport { ProductList, ProductCreate, ProductEdit } from './components/products';\nimport { OrderList, OrderShow } from './components/orders';\n\n\nconst App = () => {\n  \n  return (\n    <Admin dataProvider={dataProvider} authProvider={authProvider}>\n\n      <Resource \n        name=\"users\"\n        list={UserList}\n        create={UserCreate}\n        edit={UserEdit}\n      />\n\n      <Resource \n        name=\"products\"\n        list={ProductList}\n        create={ProductCreate}\n        edit={ProductEdit}\n      />\n\n      <Resource \n        name=\"orders\"\n        list={OrderList}\n        show={OrderShow}\n      />\n\n    </Admin>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}